from pygame import *
from random import *
from math import *

init()
font.init()

size = (800, 600)
screen = display.set_mode(size)
mb = mouse.get_pressed()

running = True
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
YELLOW = (255, 255, 0)

storyfont = font.SysFont("calibri", 24)
clock = time.Clock()
x = 0
introText1 = list("The year is 2114, and Aliens are angry at earth for all the space junk.")
introText3 = list("They are dropping satelites and meteors onto us, as a punishment.")
introText5 = list("Your mission if you choose to accept, is to prevent anything from ")
introText7 = list("hitting the world, and prevent the extinctions of humans.")
introText9 = list("Help your fellow humans preserve the life of this world.")
introText11 = list("                       Double click To Start")
story = [introText1, introText3, introText5, introText7, introText9,introText11]
y = 0
for marco in range(len(story)):
    x = 0
    for word in story[marco]:
        for e in event.get():
            if e.type == QUIT:
                running = False
                quit()
                break

        mb = mouse.get_pressed()
        if mb[0]:
            running = False

        screen.blit(storyfont.render(word, False, WHITE), (x + 20, 20 + 30 * y))
        x += 11
        time.wait(200)
        display.update()

        if not running:
            break
    if not running:
        break

    y += 1

for marco in range(len(story)):
    x = 0
    for word in story[marco]:
        screen.blit(storyfont.render(word, False, WHITE), (x + 20, 20 + 30 * y))
        x += 11
    y += 1
display.update()
time.wait(5000)
while running:
    screen.fill(BLACK)
    for e in event.get():
        if e.type == QUIT:
            running = False

    clock.tick(30)
    display.update()
quit()



init()
ach = False

size = [800, 600]
screen = display.set_mode(size)

running = True

POLLUTION = (153, 153, 0)

trashs = []
lives = 3
totlives = 3
trashsize = 25
speed = 1
basketSize = 100

lvl = 1
dirt = 0
run = 0
rate = 7 / 6
speed = 1

game = True

BigFont = font.SysFont("comicsansms", 100)
BigishFont = font.SysFont("comicsansms", 101)
MidFont = font.SysFont("comicsamsm", 65)
LittleFont = font.SysFont("comicsansms", 30)
lose = False
selected = False
clickedstat = True
pausescreen = False

stuff = True

midt = image.load("space.jpg")
midtown = transform.smoothscale(midt, (800, 450))
smallt = image.load("space.jpg")
smltown = transform.smoothscale(smallt, (800, 450))
bigt = image.load("space.jpg")
bigtown = transform.smoothscale(bigt, (800, 450))

a = image.load("ewstarwars.jpg")
b = image.load("ha.jpg")
c = image.load("no.jpeg")
aa = transform.smoothscale(a, (2 * trashsize, 2 * trashsize))
bb = transform.scale(b, (2 * trashsize, 2 * trashsize))
cc = transform.smoothscale(c, (2 * trashsize, 2 * trashsize))
trashlist = [aa, bb, cc]
q = image.load("space.jpg")
Q = transform.smoothscale(q, (49, 50))
w = image.load("space.jpg")
W = transform.smoothscale(w, (49, 50))
e = image.load("space.jpg")
E = transform.smoothscale(e, (49, 50))
r = image.load("space.jpg")
R = transform.smoothscale(r, (49, 50))
t = image.load("space.jpg")
T = transform.smoothscale(t, (49, 50))
y = image.load("space.jpg")
Y = transform.smoothscale(y, (49, 50))
speed = 14

def length(x):
    return 300 - (200 / x)


basketlvl = 1

mymedals = [0, 0, 0, 0, 0, 0]

for bob in range(int((lvl + 5) * (lvl + 6) * 5 / 21)):
    trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])

stuff = False
initstuff = False
initblah = False
blah = True
seriousout = False
ff = False
damage = False

while running and not seriousout:

    clicked = False
    mx, my = mouse.get_pos()
    mb = mouse.get_pressed()
    mouse.set_visible(True)

    k = 0
    stuff = False

    for e in event.get():
        if e.type == QUIT:
            running = False
            seriousout = True
        if e.type == MOUSEBUTTONDOWN and initstuff:
            k = 1
        if e.type == MOUSEBUTTONDOWN and initstuff and initblah:
            stuff = True

    if k == 0:
        initblah = True

    draw.rect(screen, BLACK, (304, 0, 356, 50))
    basketSize = length(basketlvl)
    playerBasket = (int(mx - basketSize / 2), 390, basketSize, 20)

    draw.rect(screen, (int(153 * (dirt / totlives)), int(153 * (dirt / totlives)), int(255 * (1 - dirt / totlives))),
              (0, 500, 800, 100))

    draw.rect(screen, GREEN, (0, 0, 800, 200))
    screen.blit(smltown, (0, 50))
    screen.blit(LittleFont.render("Destruction Level: " + str(int(100 * dirt / totlives)) + "%", True, BLUE), (12, 0))
    screen.blit(LittleFont.render("Level: " + str(lvl), True, BLUE), (675, 0))

    if run == 1:
        if True:
            if True:
                initstuff = True
                draw.rect(screen, BLUE, (200, 200, 400, 100))
                draw.rect(screen, BLUE, (200, 350, 400, 100))
                draw.rect(screen, YELLOW, (190, 60, 440, 80))
                screen.blit(LittleFont.render("Anger Sensitivity Down", True, GREEN), (225, 225))
                screen.blit(MidFont.render("BasketSize ++", True, GREEN), (225, 375))
                screen.blit(MidFont.render("Choose an upgrade", True, RED), (200, 75))
                if Rect(200, 200, 400, 100).collidepoint(mx, my) and stuff:
                    lvl += 1
                    trashs = []
                    for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    speed *= rate
                    selected = False
                    totlives += 1
                    lives = totlives
                    run = 0
                    stuff = False
                    blah = True

                elif Rect(200, 350, 400, 100).collidepoint(mx, my) and stuff:
                    lvl += 1
                    basketlvl += 1
                    trashs = []
                    for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    stuff = False
                    speed *= rate
                    selected = False
                    lives = totlives
                    run = 0
                    blah = True
    if run == 2:
        if True:
            trashs = []
            for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
            game = True
            dirt = 0
            lvl += 1
            speed *= rate
            selected = False
            lives = totlives
            lose = False
            stuff = True
            run = 0
            blah = True
            if lvl == 11:
                ach = True
                run = 0
            else:
                trashs = []
                for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                    trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                game = True
                dirt = 0
                lvl += 1
                speed *= rate
                selected = False
                lives = totlives
                lose = False
                stuff = True
                run = 0
                blah = True

    if ach:
        draw.rect(screen, RED, (280, 315, 200, 100))
        screen.blit(BigishFont.render("Well Done!", True, (randint(0, 255), randint(0, 255), randint(0, 255))),
                    (150, 200))
        screen.blit(LittleFont.render("Collect Medal!", True, BLUE), (290, 325))
        if Rect(280, 315, 200, 100).collidepoint(mx, my) and mb[0]:
            if damage:
                mymedals = [Q, 0, 0, 0, 0, 0]
                running = False
            else:
                mymedals = [Q, W, 0, 0, 0, 0]
                running = False

    if len(trashs) == 0 and not lose and not game and blah:
        if True:
            draw.rect(screen, (0, 200, 0), (265, 330, 200, 40))
            screen.blit(BigishFont.render("Well Done!", True, BLACK), (149, 199))
            screen.blit(BigFont.render("Well Done!", True, GREEN), (150, 200))

            screen.blit(LittleFont.render("Next Level", True, BLUE), (290, 325))

        if (Rect(265, 330, 200, 40).collidepoint(mx, my) and mb[0]):
            blah = False
            if lvl % 3 == 0:
                run = 1
            else:
                run = 2

    if game:
        if len(trashs) == 0:
            game = False
            lose = False
            selected = False
        draw.rect(screen, GREEN, Rect(playerBasket))
        delindex = []
        for i in range(len(trashs)):
            trashs[i][1] += speed
            screen.blit(trashs[i][2], (int(trashs[i][0] - trashsize), int(trashs[i][1] - trashsize)))
            if trashs[i][1] >= 500 - trashsize:
                lives -= 1
                delindex.append(i)
                dirt += 1
                damage = True
                if len(trashs) == 0 and lives == 0:
                    lives = -1
                    game = False
                    lose = True
            if Rect(trashs[i][0] - trashsize, trashs[i][1] - trashsize, 2 * trashsize, 2 * trashsize).colliderect(
                    Rect(playerBasket)):
                delindex.append(i)
        for j in delindex:
            del trashs[j]
        draw.rect(screen, BLACK, (0, 65, 45, 55))
        draw.rect(screen, BLUE, (12, 77, 8, 30))
        draw.rect(screen, BLUE, (25, 77, 8, 30))

        if Rect(0, 65, 45, 55).collidepoint(mx, my) and mb[0] and not pausescreen:
            pausescreen = True
            ff = True
            curspeed = speed
    if ff:
        ff = False
        speed = 0

    if pausescreen:
        draw.rect(screen, BLACK, (200, 100, 400, 200))
        draw.rect(screen, RED, (200, 300, 400, 100))
        screen.blit(MidFont.render("View Medals", True, BLUE), (290, 300))
        screen.blit(MidFont.render("to continue", True, WHITE), (290, 200))
        screen.blit(MidFont.render("Click here", True, WHITE), (290, 125))
        if Rect(200, 100, 400, 100).collidepoint(mx, my) and mb[0]:
            pausescreen = False
            speed += curspeed

    if lives == 0:
        lives = -1
        game = False
        lose = True

    if not game and lose:
        draw.rect(screen, RED, (245, 330, 250, 40))
        screen.blit(BigishFont.render("Game Over", True, BLACK), (149, 199))
        screen.blit(BigFont.render("Game Over", True, YELLOW), (150, 200))
        screen.blit(LittleFont.render("Press to retry", True, BLUE), (270, 325))
        if Rect(245, 330, 250, 40).collidepoint(mx, my) and mb[0]:
            trashs = []
            for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
            lives = totlives
            game = True
            dirt = 0
            lose = False

    mb = list(mouse.get_pressed())
    prevmb = mb[:]

    display.flip()

from pygame import *

init()
font.init()

size = (990, 600)
screen = display.set_mode(size)
mb = mouse.get_pressed()
WHITE = (255, 255, 255)
running = True

storyfont2 = font.SysFont("Arial", 24)
clock = time.Clock()
x = 0
introText0 = list("You are so good at this that the aliens got mad and did it again.")
introText2 = list("Your mission if you choose to accept, is to save the world again.")


story = [introText0, introText2]
w = 1
for marco in range(len(story)):
    x = 0
    for word in story[marco]:
        for e in event.get():
            if e.type == QUIT:
                running = False
                quit()
                break

        mb = mouse.get_pressed()
        if mb[0]:
            running = False

        screen.blit(storyfont2.render(word, False, WHITE), (x + 20, 20 + 30 * w))
        x += 11
        time.wait(200)
        display.update()

        if not running:
            break
    if not running:
        break

    w += 1

for marco in range(len(story)):
    x = 0
    for word in story[marco]:
        screen.blit(storyfont2.render(word, False, WHITE), (x + 20, 20 + 30 * w))
        x += 11
    w += 1
display.update()
time.wait(5000)
while running:
    screen.fill(BLACK)
    for e in event.get():
        if e.type == QUIT:
            running = False

    clock.tick(30)
    display.update()
quit()

running = True

ach = False

size = [800, 600]
screen = display.set_mode(size)

trashs = []
totlives = 1 + ceil(totlives / 2)
trashsize = 20

basketlvl = ceil(basketlvl / 2)

lvl = 1
dirt = 0
run = 0
rate = 7 / 4

game = True

lose = False
selected = False
clickedstat = True
pausescreen = False

stuff = True

for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
    trashs.append([randint(trashsize, 800 - trashsize), -190 * bob, trashlist[randint(0, 2)]])

stuff = False
initstuff = False
initblah = False
blah = True

ff = False
damage = False

medalview = False

while running and not seriousout:

    clicked = False
    mx, my = mouse.get_pos()
    mb = mouse.get_pressed()
    mouse.set_visible(True)

    k = 0
    stuff = False

    for e in event.get():
        if e.type == QUIT:
            running = False
            seriousout = True
        if e.type == MOUSEBUTTONDOWN and initstuff:
            k = 1
        if e.type == MOUSEBUTTONDOWN and initstuff and initblah:
            stuff = True

    if k == 0:
        initblah = True

    basketSize = length(basketlvl)
    playerBasket = (int(mx - basketSize / 2), 390, basketSize, 20)

    draw.rect(screen, (int(153 * (dirt / totlives)), int(153 * (dirt / totlives)), int(255 * (1 - dirt / totlives))),
              (0, 500, 800, 100))

    draw.rect(screen, GREEN, (0, 0, 800, 200))
    draw.rect(screen, BLACK, (304, 0, 356, 50))
    for i in range(6):
        if mymedals[i] != 0:
            screen.blit(mymedals[i], (304 + 49 * i, 0))
    screen.blit(midtown, (0, 50))
    screen.blit(LittleFont.render("Destruction Level: " + str(int(100 * dirt / totlives)) + "%", True, BLUE), (12, 3))
    screen.blit(LittleFont.render("Level: " + str(lvl), True, BLUE), (675, 2))

    if run == 1:
        if True:
            if True:
                initstuff = True
                draw.rect(screen, BLUE, (200, 200, 400, 100))
                draw.rect(screen, BLUE, (200, 350, 400, 100))
                draw.rect(screen, YELLOW, (190, 60, 440, 80))
                screen.blit(LittleFont.render("Destruction Sensitivity Down", True, GREEN), (225, 225))
                screen.blit(MidFont.render("BasketSize ++", True, GREEN), (225, 375))
                screen.blit(MidFont.render("Choose an upgrade", True, RED), (200, 75))
                if Rect(200, 200, 400, 100).collidepoint(mx, my) and stuff:
                    lvl += 1
                    trashs = []
                    for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    speed *= rate
                    selected = False
                    totlives += 1
                    lives = totlives
                    run = 0
                    stuff = False
                    blah = True

                elif Rect(200, 350, 400, 100).collidepoint(mx, my) and stuff:
                    lvl += 1
                    basketlvl += 1
                    trashs = []
                    for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    stuff = False
                    speed *= rate
                    selected = False
                    lives = totlives
                    run = 0
                    blah = True
    if run == 2:
        if True:
            if True:
                trashs = []
                for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                    trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                game = True
                dirt = 0
                lvl += 1
                speed *= rate
                selected = False
                lives = totlives
                lose = False
                stuff = True
                run = 0
                blah = True
                if lvl == 11:
                    ach = True
                    run = 0
                else:
                    trashs = []
                    for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    lvl += 1
                    speed *= rate
                    selected = False
                    lives = totlives
                    lose = False
                    stuff = True
                    run = 0
                    blah = True

    if ach == True:
        draw.rect(screen, RED, (280, 315, 200, 100))
        screen.blit(BigishFont.render("Well Done!", True, (randint(0, 255), randint(0, 255), randint(0, 255))),
                    (150, 200))
        screen.blit(LittleFont.render("Collect Medal!", True, BLUE), (290, 325))
        if Rect(280, 315, 200, 100).collidepoint(mx, my) and mb[0]:
            if True:
                mymedals[2] = E
                running = False
            else:
                mymedals[2] = E
                mymedals[3] = R
                running = False

    if len(trashs) == 0 and not lose and not game and blah:
        if True:
            draw.rect(screen, (0, 200, 0), (265, 330, 200, 40))
            screen.blit(BigishFont.render("Well Done!", True, BLACK), (149, 199))
            screen.blit(BigFont.render("Well Done!", True, GREEN), (150, 200))

            screen.blit(LittleFont.render("Next Level", True, BLUE), (290, 325))

        if (Rect(265, 330, 200, 40).collidepoint(mx, my) and mb[0]):
            blah = False
            if lvl % 3 == 0:
                run = 1
            else:
                run = 2

    if game:
        if len(trashs) == 0:
            game = False
            lose = False
            selected = False
        draw.rect(screen, GREEN, Rect(playerBasket))
        delindex = []
        for i in range(len(trashs)):
            trashs[i][1] += speed
            screen.blit(trashs[i][2], (int(trashs[i][0] - trashsize), int(trashs[i][1] - trashsize)))
            if trashs[i][1] >= 500 - trashsize:
                lives -= 1
                delindex.append(i)
                dirt += 1
                damage = True
                if len(trashs) == 0 and lives == 0:
                    lives = -1
                    game = False
                    lose = True
            if Rect(trashs[i][0] - trashsize, trashs[i][1] - trashsize, 2 * trashsize, 2 * trashsize).colliderect(
                    Rect(playerBasket)):
                delindex.append(i)
        for j in delindex:
            del trashs[j]
        draw.rect(screen, BLACK, (0, 65, 45, 55))
        draw.rect(screen, BLUE, (12, 77, 8, 30))
        draw.rect(screen, BLUE, (25, 77, 8, 30))
        if Rect(0, 65, 45, 55).collidepoint(mx, my) and mb[0] and not pausescreen:
            pausescreen = True
            ff = True
            curspeed = speed
    if ff:
        ff = False
        speed = 15

    if pausescreen:
        if not medalview:
            draw.rect(screen, BLACK, (200, 100, 400, 200))
            draw.rect(screen, RED, (200, 300, 400, 100))
            screen.blit(MidFont.render("View Medals!", True, BLUE), (290, 300))
            screen.blit(MidFont.render("to continue", True, WHITE), (290, 200))
            screen.blit(MidFont.render("Click here", True, WHITE), (290, 125))
            if Rect(200, 100, 400, 200).collidepoint(mx, my) and mb[0]:
                pausescreen = False
                speed += curspeed
        if Rect(200, 300, 400, 100).collidepoint(mx, my) and mb[0]:
            medalview = True

    if medalview:
        draw.rect(screen, BLACK, (0, 0, 800, 600))
        draw.rect(screen, RED, (0, 0, 100, 100))
        if mymedals[1] == 0:
            Q = transform.smoothscale(q, (200, 200))
            screen.blit(Q, (200, 0))
        else:
            Q = transform.smoothscale(q, (200, 200))
            screen.blit(Q, (200, 0))
            W = transform.smoothscale(w, (200, 200))
            screen.blit(W, (400, 0))
        screen.blit(LittleFont.render("Go Back", True, BLUE), (0, 0))
        if Rect(0, 0, 100, 100).collidepoint(mx, my) and mb[0]:
            medalview = False
            W = transform.smoothscale(w, (49, 50))
            T = transform.smoothscale(t, (49, 50))
            E = transform.smoothscale(e, (49, 50))
            Q = transform.smoothscale(q, (49, 50))

    if lives == 0:
        lives = -1
        game = False
        lose = True

    if not game and lose:
        draw.rect(screen, RED, (245, 330, 250, 40))
        screen.blit(BigishFont.render("Game Over", True, BLACK), (149, 199))
        screen.blit(BigFont.render("Game Over", True, YELLOW), (150, 200))
        screen.blit(LittleFont.render("Press to retry", True, BLUE), (270, 325))
        if Rect(245, 330, 250, 40).collidepoint(mx, my) and mb[0]:
            trashs = []
            for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
            lives = totlives
            game = True
            dirt = 0
            lose = False

    mb = list(mouse.get_pressed())
    prevmb = mb[:]

    display.flip()

from pygame import *

init()
font.init()

size = (990, 600)
screen = display.set_mode(size)
mb = mouse.get_pressed()
WHITE = (255, 255, 255)
running = True

storyfont2 = font.SysFont("calibri", 24)
clock = time.Clock()
x = 0

introText14 = list("The government has noticed your progress. They have hired you to kill them ")
introText16 = list("Your task is not a simple one, due to the dense population ")
introText18 = list("will lead to more destruction. So get out there, and save the world. ")
introText20 = list("Failure is not an option, or the world will die.")
story = [introText14, introText16, introText18, introText20]
w = 0
for marco in range(len(story)):
    x = 0
    for word in story[marco]:
        for e in event.get():
            if e.type == QUIT:
                running = False
                quit()
                break


        if mb[0]:
            running = False
        print("***",word)
        screen.blit(storyfont2.render(word, False, WHITE), (x + 20, 20 + 30 * w))
        x += 11
        time.wait(200)
        display.update()

        if not running:
            break
    if not running:
        break

    w += 1

for marco in range(len(story)):
    x = 0
    for word in story[marco]:
        screen.blit(storyfont2.render(word, False, WHITE), (x + 20, 20 + 30 * w))
        x += 11
    w += 1
display.update()
time.wait(5000)
while running:
    screen.fill(BLACK)
    for e in event.get():
        if e.type == QUIT:
            running = False

    clock.tick(30)
    display.update()
quit()

running = True
ach = False

trashs = []
totlives = 1 + ceil(totlives / 2)
trashsize = 20

basketlvl = ceil(basketlvl / 2)

lvl = 1
dirt = 0
run = 0
rate = 32 / 21
speed = 1.44

game = True

BigFont = font.SysFont("comicsansms", 100)
BigishFont = font.SysFont("comicsansms", 101)
MidFont = font.SysFont("comicsamsm", 65)
LittleFont = font.SysFont("comicsansms", 30)
lose = False
selected = False
clickedstat = True
pausescreen = False

stuff = True

for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
    trashs.append([randint(trashsize, 800 - trashsize), -180 * bob, trashlist[randint(0, 2)]])

stuff = False
initstuff = False
initblah = False
blah = True

ff = False
damage = False

while running and not seriousout:

    clicked = False
    mx, my = mouse.get_pos()
    mb = mouse.get_pressed()
    mouse.set_visible(True)

    k = 0
    stuff = False

    for e in event.get():
        if e.type == QUIT:
            running = False
            seriousout = True
        if e.type == MOUSEBUTTONDOWN and initstuff:
            k = 1
        if e.type == MOUSEBUTTONDOWN and initstuff and initblah:
            stuff = True

    if k == 0:
        initblah = True

    draw.rect(screen, BLACK, (304, 0, 356, 50))

    basketSize = length(basketlvl)
    playerBasket = (int(mx - basketSize / 2), 390, basketSize, 20)

    draw.rect(screen, (int(153 * (dirt / totlives)), int(153 * (dirt / totlives)), int(255 * (1 - dirt / totlives))),
              (0, 500, 800, 100))

    draw.rect(screen, GREEN, (0, 0, 800, 200))
    screen.blit(midtown, (0, 50))
    screen.blit(LittleFont.render("Destruction Level: " + str(int(100 * dirt / totlives)) + "%", True, BLUE), (12, 0))
    screen.blit(LittleFont.render("Level: " + str(lvl), True, BLUE), (675, 0))

    if run == 1:
        if True:
            if True:
                initstuff = True
                draw.rect(screen, BLUE, (200, 200, 400, 100))
                draw.rect(screen, BLUE, (200, 350, 400, 100))
                draw.rect(screen, YELLOW, (190, 60, 440, 80))
                screen.blit(LittleFont.render("Destruction Sensitivity Down", True, GREEN), (225, 225))
                screen.blit(MidFont.render("BasketSize ++", True, GREEN), (225, 375))
                screen.blit(MidFont.render("Choose an upgrade", True, RED), (200, 75))
                if Rect(200, 200, 400, 100).collidepoint(mx, my) and stuff:
                    lvl += 1
                    trashs = []
                    for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    speed *= rate
                    selected = False
                    totlives += 1
                    lives = totlives
                    run = 0
                    stuff = False
                    blah = True

                elif Rect(200, 350, 400, 100).collidepoint(mx, my) and stuff:
                    lvl += 1
                    basketlvl += 1
                    trashs = []
                    for bob in range(int(((lvl + 5) * (lvl + 6) * 5 / 21))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    stuff = False
                    speed *= rate
                    selected = False
                    lives = totlives
                    run = 0
                    blah = True
    if run == 2:
        if True:
            if True:
                trashs = []
                for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                    trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                game = True
                dirt = 0
                lvl += 1
                speed *= rate
                selected = False
                lives = totlives
                lose = False
                stuff = True
                run = 0
                blah = True
                if lvl == 11:
                    ach = True
                    run = 0
                else:
                    trashs = []
                    for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                        trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
                    game = True
                    dirt = 0
                    lvl += 1
                    speed *= rate
                    selected = False
                    lives = totlives
                    lose = False
                    stuff = True
                    run = 0
                    blah = True

    if ach == True:
        draw.rect(screen, RED, (280, 315, 200, 100))
        screen.blit(BigishFont.render("Well Done!", True, (randint(0, 255), randint(0, 255), randint(0, 255))),
                    (150, 200))
        screen.blit(LittleFont.render("Collect Medal!", True, BLUE), (290, 325))
        if Rect(280, 315, 200, 100).collidepoint(mx, my) and mb[0]:
            if True:
                mymedals[2] = E
                running = False
            else:
                mymedals[2] = E
                mymedals[3] = R
                running = False

    if len(trashs) == 0 and not lose and not game and blah:
        if True:
            draw.rect(screen, (0, 200, 0), (265, 330, 200, 40))
            screen.blit(BigishFont.render("Well Done!", True, BLACK), (149, 199))
            screen.blit(BigFont.render("Well Done!", True, GREEN), (150, 200))

            screen.blit(LittleFont.render("Next Level", True, BLUE), (290, 325))

        if (Rect(265, 330, 200, 40).collidepoint(mx, my) and mb[0]):
            blah = False
            if lvl % 3 == 0:
                run = 1
            else:
                run = 2

    if game:
        if len(trashs) == 0:
            game = False
            lose = False
            selected = False
        draw.rect(screen, GREEN, Rect(playerBasket))
        delindex = []
        for i in range(len(trashs)):
            trashs[i][1] += speed
            screen.blit(trashs[i][2], (int(trashs[i][0] - trashsize), int(trashs[i][1] - trashsize)))
            if trashs[i][1] >= 500 - trashsize:
                lives -= 1
                delindex.append(i)
                dirt += 1
                damage = True
                if len(trashs) == 0 and lives == 0:
                    lives = -1
                    game = False
                    lose = True
            if Rect(trashs[i][0] - trashsize, trashs[i][1] - trashsize, 2 * trashsize, 2 * trashsize).colliderect(
                    Rect(playerBasket)):
                delindex.append(i)
        for j in delindex:
            del trashs[j]
        draw.rect(screen, BLACK, (0, 65, 45, 55))
        draw.rect(screen, BLUE, (12, 77, 8, 30))
        draw.rect(screen, BLUE, (25, 77, 8, 30))
        if Rect(0, 65, 45, 55).collidepoint(mx, my) and mb[0] and not pausescreen:
            pausescreen = True
            ff = True
            curspeed = speed
    if ff:
        ff = False
        speed = 0

    if pausescreen:
        if not medalview:
            draw.rect(screen, BLACK, (200, 100, 400, 200))
            draw.rect(screen, RED, (200, 300, 400, 100))
            screen.blit(MidFont.render("View Medals!", True, BLUE), (290, 300))
            screen.blit(MidFont.render("to continue", True, WHITE), (290, 200))
            screen.blit(MidFont.render("Click here", True, WHITE), (290, 125))
            if Rect(200, 100, 400, 200).collidepoint(mx, my) and mb[0]:
                pausescreen = False
                speed += curspeed
        if Rect(200, 300, 400, 100).collidepoint(mx, my) and mb[0]:
            medalview = True

    if medalview:
        draw.rect(screen, BLACK, (0, 0, 800, 600))
        draw.rect(screen, RED, (0, 0, 100, 100))
        screen.blit(LittleFont.render("Go Back", True, BLUE), (0, 0))

        if Rect(0, 0, 100, 100).collidepoint(mx, my) and mb[0]:
            medalview = False
            Q = transform.smoothscale(q, (49, 50))
            W = transform.smoothscale(w, (49, 50))
            E = transform.smoothscale(e, (49, 50))
            R = transform.smoothscale(r, (49, 50))

        Q = transform.smoothscale(q, (200, 200))
        E = transform.smoothscale(e, (200, 200))
        screen.blit(Q, (200, 0))
        screen.blit(E, (200, 200))
        if mymedals[1] != 0:
            W = transform.smoothscale(w, (200, 200))
            screen.blit(W, (400, 0))
        if mymedals[3] != 0:
            R = transform.smoothscale(r, (200, 200))
            screen.blit(R, (400, 200))

    if lives == 0:
        lives = -1
        game = False
        lose = True

    if not game and lose:
        draw.rect(screen, RED, (245, 330, 250, 40))
        screen.blit(BigishFont.render("Game Over", True, BLACK), (149, 199))
        screen.blit(BigFont.render("Game Over", True, YELLOW), (150, 200))
        screen.blit(LittleFont.render("Press to retry", True, BLUE), (270, 325))
        if Rect(245, 330, 250, 40).collidepoint(mx, my) and mb[0]:
            trashs = []
            for bob in range(int(((lvl + 3) * (lvl + 4) / 2))):
                trashs.append([randint(trashsize, 800 - trashsize), -200 * bob, trashlist[randint(0, 2)]])
            lives = totlives
            game = True
            dirt = 0
            lose = False

    mb = list(mouse.get_pressed())
    prevmb = mb[:]

    display.flip()

while running and not seriousout:

    mx, my = mouse.get_pos()
    mb = mouse.get_pressed()
    mouse.set_visible(True)

    if not medalview:
        if True:
            draw.rect(screen, BLACK, (200, 100, 400, 200))
            draw.rect(screen, RED, (200, 300, 400, 100))
            screen.blit(MidFont.render("View Medals", True, BLUE), (290, 300))
            screen.blit(MidFont.render("winning!", True, WHITE), (290, 200))
            screen.blit(MidFont.render("Congrats on", True, WHITE), (290, 125))
            if Rect(200, 100, 400, 200).collidepoint(mx, my) and mb[0]:
                pausescreen = False
                speed += curspeed
            if Rect(200, 300, 400, 100).collidepoint(mx, my) and mb[0]:
                medalview = True

    if medalview:
        draw.rect(screen, BLACK, (0, 0, 800, 600))
        draw.rect(screen, RED, (0, 0, 100, 100))
        screen.blit(LittleFont.render("Go Back", True, BLUE), (0, 0))

        if Rect(0, 0, 100, 100).collidepoint(mx, my) and mb[0]:
            medalview = False
            Q = transform.smoothscale(q, (49, 50))
            W = transform.smoothscale(w, (49, 50))
            E = transform.smoothscale(e, (49, 50))
            R = transform.smoothscale(r, (49, 50))
            T = transform.smoothscale(t, (49, 50))
            Y = transform.smoothscale(y, (49, 50))

        Q = transform.smoothscale(q, (200, 200))
        E = transform.smoothscale(e, (200, 200))
        T = transform.smoothscale(t, (200, 200))
        screen.blit(Q, (200, 0))
        screen.blit(E, (200, 200))
        screen.blit(T, (200, 400))
        if mymedals[1] != 0:
            W = transform.smoothscale(w, (200, 200))
            screen.blit(W, (400, 0))
        if mymedals[3] != 0:
            R = transform.smoothscale(r, (200, 200))
            screen.blit(R, (400, 200))
        if mymedals[5] != 0:
            Y = transform.smoothscale(y, (200, 200))
            screen.blit(Y, (400, 400))

    for e in event.get():
        if e.type == QUIT:
            running = False
            seriousout = True
        if e.type == MOUSEBUTTONDOWN and initstuff:
            k = 1
        if e.type == MOUSEBUTTONDOWN and initstuff and initblah:
            stuff = True

quit()